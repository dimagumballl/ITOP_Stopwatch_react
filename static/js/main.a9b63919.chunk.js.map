{"version":3,"sources":["JScomponents/stopwatch/Stopwatch.js","App/App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","props","ComandWatch","Comand","Timer","setState","hour","min","second","StartStop","setTimeout","state","prevstate","subscription","Observable","create","observer","timer","clearInterval","subscribe","val","console","log","err","error","unsubscribe","onClick","e","clearTimeout","Click","className","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAmJiBA,G,wDA7If,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,YAAY,SAACC,GACC,UAATA,EACF,EAAKC,MAAMD,GAEK,SAATA,GACN,EAAKC,MAAMD,GACX,EAAKE,SAAS,CACZC,KAAK,EACLC,IAAK,EACLC,OAAQ,EACRC,UAAW,WAGG,YAATN,IAEP,EAAKE,SAAS,CACZC,KAAK,EACLC,IAAK,EACLC,OAAQ,IAEV,EAAKJ,MAAM,WAhCI,EAmCnBA,MAAM,SAACD,GACL,GAAY,SAATA,EACD,EAAKE,SAAS,CACZI,UAAW,UAEb,EAAKL,MAAM,WAER,GAAY,UAATD,EACN,EAAKE,SAAS,CACZI,UAAW,SAEbC,YAAW,kBAAI,EAAKN,MAAM,QAAO,UAE9B,GAAe,OAAXD,GACmB,SAAvB,EAAKQ,MAAMF,UAAmB,CAE5B,EAAKE,MAAMJ,KAAK,GACjB,EAAKF,UAAS,SAACO,GACb,MAAO,CACLL,IAAK,EACLD,KAAKM,EAAUN,KAAK,MAKrB,EAAKK,MAAMH,QAAQ,GACpB,EAAKH,UAAS,SAACO,GACb,MAAO,CACLJ,OAAQ,EACRD,IAAIK,EAAUL,IAAI,MAKtB,EAAKF,UAAS,SAACO,GACb,MAAO,CACLJ,OAAQI,EAAUJ,OAAO,MAMjC,IAWIK,EAXWC,IAAWC,QAAO,SAACC,GAEhC,IAAMC,EAAQP,YAAW,WACrB,EAAKN,MAAM,QACZ,KAEH,OAAO,WAEHc,cAAcD,OAGME,WAC1B,SAAAC,GAAG,OAAIC,QAAQC,IAAI,QAASF,MAC5B,SAAAG,GAAG,OAAIF,QAAQG,MAAM,SAAUD,MAC/B,kBAAMF,QAAQC,IAAI,gBAEpBZ,YAAW,kBAAMG,EAAaY,gBAAe,QA7F9B,EAiGnBC,QAAQ,SAACC,GACPC,aAAa,EAAKX,QACM,IAAnB,EAAKN,MAAMkB,OACd,EAAKxB,SAAS,CACVwB,OAAM,IAEV,EAAKZ,MAAQP,YAAW,WACtB,EAAKL,SAAS,CACZwB,OAAM,MAEP,OAGHD,aAAa,EAAKX,OAClBP,YAAW,kBAAI,EAAKN,MAAM,WAC1B,EAAKC,SAAS,CACZwB,OAAM,MA/GV,EAAKlB,MAAQ,CACXL,KAAK,EACLC,IAAK,EACLC,OAAQ,EACRC,UAAW,QACXoB,OAAO,GAPQ,E,qDAsHV,IAAD,OACN,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACGC,KAAKpB,MAAML,KADd,IACqByB,KAAKpB,MAAMJ,IADhC,IACsCwB,KAAKpB,MAAMH,UAEjD,sBAAKsB,UAAU,oBAAf,UACI,wBAAQJ,QAAS,kBAAI,EAAKxB,YAAY,EAAKS,MAAMF,YAAjD,SAEIsB,KAAKpB,MAAMF,YAGf,wBAAQiB,QAAS,kBAAI,EAAKA,WAA1B,kBAGA,wBAAQA,QAAS,kBAAI,EAAKxB,YAAY,YAAtC,+B,GAtIY8B,c,MCQTC,MARf,WACE,OACE,qBAAKH,UAAU,UAAf,SACE,cAAC,EAAD,OCISI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.a9b63919.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport './stopwatch.css'\r\n\r\nclass Stopwatch extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hour:0,\r\n      min: 0,\r\n      second: 0,\r\n      StartStop: \"START\",//fo check works of Stopwatch (Для проверки работы секундомера)\r\n      Click: false, //for double click function (Для двойного нажатия)\r\n    };\r\n  }\r\n  \r\n  \r\n  ComandWatch=(Comand)=>{// controler for more comfortable using timer (Для удбства работы с методом Time())\r\n    if(Comand===\"START\"){ // if Comand==\"START\" we jast starting timer (если Comand==\"START\" просто запускаем таймер)\r\n     this.Timer(Comand)\r\n    }\r\n    else if(Comand===\"STOP\"){// if \"STOP\" we are stoping timer and make time=0 (если \"STOP\" стоп мы обнуляем и останавливаем тамер)\r\n      this.Timer(Comand)\r\n      this.setState({\r\n        hour:0,\r\n        min: 0,\r\n        second: 0,\r\n        StartStop: \"START\" \r\n    });\r\n    }\r\n    else if (Comand===\"RESTART\"){ // if \"RRESTART\" time=0 but timer is not stoping(если \"RRESTART\" мы обнуляем время но не останавливаем таймер)\r\n      \r\n      this.setState({\r\n        hour:0,\r\n        min: 0,\r\n        second: 0,\r\n      });\r\n      this.Timer(\"START\")\r\n    }\r\n  }\r\n  Timer=(Comand)=>{//Timer\r\n    if(Comand===\"WAIT\"){//if Command=\"WAIT\" tamer is stoping, it becam when doubleClcki is using(если Command=\"WAIT\" таймер останвливается просходит при двойном нажатии)\r\n      this.setState({\r\n        StartStop: \"START\" //if StartStop==\"START\" timer is stoped(если StartStop==\"START\" таймер стоит)\r\n      })\r\n      this.Timer(null)   // and we restart timer with Comand=null(ну и наоборот, так сделано чтобы сразу можно было подписать кнопку)\r\n    }\r\n    else if(Comand===\"START\"){//if START(это для START)\r\n      this.setState({\r\n        StartStop: \"STOP\" //if StartStop==\"STOP\" timer is runing(если StartStop==\"STOP\" таймер идет)\r\n      })\r\n      setTimeout(()=>this.Timer(null), 1000);// and we restart timer with Comand=null ( и перезапускается с параметром Comand=null)\r\n    }\r\n    else if (Comand === null){//if Comand null it's meen thet one comand was activete( Если Comand=null, это значит что таймер либо работает либо одна с команд была активирована)\r\n      if(this.state.StartStop===\"STOP\"){//if StartStop=\"STOP\" timer is working(если StartStop=\"STOP\" то таймер в стационарном робочем режиме)\r\n// here we have manipulations with time(тут мы делаем счет времени)\r\n        if(this.state.min>=59){\r\n          this.setState((prevstate) => {\r\n            return {\r\n              min: 0,\r\n              hour:prevstate.hour+1\r\n            };\r\n          });\r\n        }\r\n        else{\r\n          if(this.state.second>=59){\r\n            this.setState((prevstate) => {\r\n              return {\r\n                second: 0,\r\n                min:prevstate.min+1\r\n              };\r\n            });\r\n          }\r\n          else {\r\n            this.setState((prevstate) => {\r\n              return {\r\n                second: prevstate.second+1\r\n              };\r\n            });\r\n          }\r\n        }\r\n        \r\n        const source = Observable.create((observer) => {// here we restar timer and try to catch err, it was part of task(тут перезапускаем таймер и ловим ошибки)\r\n          \r\n          const timer = setTimeout(() => {\r\n              this.Timer(null)\r\n          }, 1000);\r\n      \r\n          return () => {\r\n            \r\n              clearInterval(timer);\r\n          } \r\n      });\r\n      const subscription = source.subscribe(\r\n        val => console.log('next:', val),\r\n        err => console.error('error:', err),\r\n        () => console.log('completed')\r\n      )\r\n      setTimeout(() => subscription.unsubscribe(), 4500); \r\n      }\r\n    }\r\n  }\r\n  onClick=(e) => { //double click function(двойное нажатие)\r\n    clearTimeout(this.timer); \r\n      if(this.state.Click===false){// if Click falls(если Click falls)\r\n      this.setState({\r\n          Click:true// Click becam true(он становится true)\r\n      });\r\n      this.timer = setTimeout(() => { \r\n        this.setState({\r\n          Click:false\r\n      });\r\n      }, 200);//and Click staeing true 200 second then becam false(если мы не кликнем в тичении 200 милесикунд он вернется в исхдное положение)\r\n    }\r\n    else{\r\n      clearTimeout(this.timer); \r\n      setTimeout(()=>this.Timer(\"WAIT\"));// but if user click in 200, he activate Timer() and send parammeter \"WAIT\"(но если мы нажмем то двойное нажатие засчитается)\r\n      this.setState({\r\n        Click:false,\r\n      });\r\n    }\r\n    \r\n}\r\n  render(){\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <div className=\"stopwatch_timer\">\r\n          {this.state.hour}:{this.state.min}:{this.state.second}\r\n        </div>\r\n        <div className=\"stopwatch_buttons\">\r\n            <button onClick={()=>this.ComandWatch(this.state.StartStop)}>\r\n              {\r\n                this.state.StartStop\r\n              }\r\n            </button>\r\n            <button onClick={()=>this.onClick()}>\r\n              WAIT\r\n            </button>\r\n            <button onClick={()=>this.ComandWatch(\"RESTART\")}>\r\n              RESTART\r\n            </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Stopwatch;\r\n  ","import React from 'react';\nimport Stopwatch from '../JScomponents/stopwatch/Stopwatch'\nimport '../common/style/main.css'\n\n\nfunction App() {\n  return (\n    <div className=\"example\">\n      <Stopwatch />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}